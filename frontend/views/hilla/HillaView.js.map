{"version":3,"file":"HillaView.js","sourceRoot":"","sources":["HillaView.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,oCAAoC,CAAC;AAC5D,OAAO,EAAE,SAAS,EAAE,MAAM,uCAAuC,CAAC;AAClE,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAC7D,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACjC,OAAO,EAAC,cAAc,EAAC,MAAM,4CAA4C,CAAC;AAE1E,MAAM,CAAC,OAAO,UAAU,SAAS;IAC/B,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;IACrC,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,QAAQ,CAAC,EAAc,CAAC,CAAC;IAGnE,OAAO,CACL,4BACI,MAAC,cAAc,IAAC,KAAK,EAAC,iBAAiB,aACnC,sCAAmB,EACnB,KAAC,SAAS,IACN,KAAK,EAAC,WAAW,EACjB,cAAc,EAAE,CAAC,CAAC,EAAE,EAAE;wBAClB,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBAC5B,CAAC,GACH,EACF,KAAC,MAAM,IACH,OAAO,EAAE,KAAK,IAAI,EAAE;wBAChB,MAAM,cAAc,GAAG,MAAM,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;wBAC1D,gBAAgB,CAAC,aAAa,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;oBAC3D,CAAC,4BACgB,EAChB,aAAa,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,KAAK,EAAE,EAAE,CAAC,CACxC,sBAAgB,YAAY,IAApB,KAAK,CAAoB,CACpC,CAAC,IACO,GAClB,CACJ,CAAC;AACJ,CAAC","sourcesContent":["import { Button } from \"@vaadin/react-components/Button.js\";\nimport { TextField } from \"@vaadin/react-components/TextField.js\";\nimport { HelloEndpoint } from \"Frontend/generated/endpoints\";\nimport { useState } from \"react\";\nimport {VerticalLayout} from \"@vaadin/react-components/VerticalLayout.js\";\n\nexport default function HillaView() {\n  const [name, setName] = useState(\"\");\n  const [notifications, setNotifications] = useState([] as string[]);\n\n\n  return (\n    <>\n        <VerticalLayout theme=\"padding spacing\">\n            <h3>Hilla View</h3>\n            <TextField\n                label=\"Your name\"\n                onValueChanged={(e) => {\n                    setName(e.detail.value);\n                }}\n            />\n            <Button\n                onClick={async () => {\n                    const serverResponse = await HelloEndpoint.sayHello(name);\n                    setNotifications(notifications.concat(serverResponse));\n                }}\n            > Say hello </Button>\n                {notifications.map((notification, index) => (\n                    <p key={index}>{notification}</p>\n                ))}\n        </VerticalLayout>\n    </>\n  );\n}\n"]}